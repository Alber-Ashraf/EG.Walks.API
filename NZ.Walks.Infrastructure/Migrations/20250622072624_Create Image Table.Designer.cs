// <auto-generated />
using System;
using EG.Walks.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EG.Walks.Infrastructure.Migrations
{
    [DbContext(typeof(EGWalksDbContext))]
    [Migration("20250622072624_Create Image Table")]
    partial class CreateImageTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EG.Walks.Domain.Entities.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9801dca-5af2-446f-9478-580dd32414ff"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("08ad254f-4369-4654-80dd-ffce9e1ca07f"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("849cb121-a3d5-4d6d-a27b-e9b1623e9237"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("EG.Walks.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtention")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("EG.Walks.Domain.Entities.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("249ddc21-7b4a-436c-8d26-421dbdd66daf"),
                            Code = "S01",
                            Name = "South Sinai",
                            RegionImageUrl = "https://example.com/images/southsinai.jpg"
                        },
                        new
                        {
                            Id = new Guid("eff6c0e2-8bec-4ae3-97d0-5d096d82b337"),
                            Code = "S03",
                            Name = "Sohage",
                            RegionImageUrl = "https://example.com/images/sohage.jpg"
                        },
                        new
                        {
                            Id = new Guid("6583823e-a0ff-4fd7-9d4c-92dcbc6f4638"),
                            Code = "R01",
                            Name = "Red Sea",
                            RegionImageUrl = "https://example.com/images/redsea.jpg"
                        },
                        new
                        {
                            Id = new Guid("97a16dca-646b-4f3d-bd42-9d684a8ca1fd"),
                            Code = "G01",
                            Name = "Giza",
                            RegionImageUrl = "https://example.com/images/giza.jpg"
                        },
                        new
                        {
                            Id = new Guid("744a5216-4c28-4235-8d52-9edb90073da0"),
                            Code = "A01",
                            Name = "Alexandria",
                            RegionImageUrl = "https://example.com/images/alexandria.jpg"
                        },
                        new
                        {
                            Id = new Guid("fb1394dc-9e33-41c1-9a9a-a3faf8eac4e6"),
                            Code = "A02",
                            Name = "Aswan",
                            RegionImageUrl = "https://example.com/images/aswan.jpg"
                        },
                        new
                        {
                            Id = new Guid("a7b29cd6-3ca8-4a65-8f5b-a7962e0ab63b"),
                            Code = "L01",
                            Name = "Luxor",
                            RegionImageUrl = "https://example.com/images/luxor.jpg"
                        },
                        new
                        {
                            Id = new Guid("8d117c3d-47a3-4726-965b-d1b073168bb6"),
                            Code = "S02",
                            Name = "Sharqia",
                            RegionImageUrl = "https://example.com/images/sharqia.jpg"
                        },
                        new
                        {
                            Id = new Guid("ad5bdb93-c574-4b9d-8075-d9035704969c"),
                            Code = "C01",
                            Name = "Cairo",
                            RegionImageUrl = "https://example.com/images/cairo.jpg"
                        },
                        new
                        {
                            Id = new Guid("c4d3ff86-415b-40fe-8681-dc058d5de9d7"),
                            Code = "Q01",
                            Name = "Quina",
                            RegionImageUrl = "https://example.com/images/quina.jpg"
                        });
                });

            modelBuilder.Entity("EG.Walks.Domain.Entities.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("EG.Walks.Domain.Entities.Walk", b =>
                {
                    b.HasOne("EG.Walks.Domain.Entities.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EG.Walks.Domain.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
